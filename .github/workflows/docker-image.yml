name: Build, Run and Push Docker Image

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Run script
        run: sudo apt install jq

      - name: Extract version number from package.json
        run: |
          VERSION=$(jq -r .version package.json)
          echo "Version: $VERSION"
          echo "APP_VERSION=$VERSION" >> $GITHUB_ENV

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build Docker Image
        run: |
          docker build -t vladpustovit/github-actions-test:${{ env.APP_VERSION }} .

      - name: Run Docker Container
        run: |
          docker run -d --name my-app vladpustovit/github-actions-test:${{ env.APP_VERSION }}

      - name: Check Container Health
        run: |
          if docker ps -f "name=my-app" | grep -q "my-app"; then
            echo "Container is running."
          else
            echo "Container is not running."
            exit 1
          fi

      - name: Push Docker Image
        run: |
          docker push vladpustovit/github-actions-test:${{ env.APP_VERSION }}



#name: Build and Push Docker Image
#
#on:
#  push:
#    branches: [ "main" ]
#  pull_request:
#    branches: [ "main" ]
#
#jobs:
#  build:
#    runs-on: ubuntu-latest
#
#    steps:
#      - name: Checkout code
#        uses: actions/checkout@v3
#
#      - name: Run script
#        run: sudo apt install jq
#
#      - name: Extract version number from package.json
#        run: |
#          VERSION=$(jq -r .version package.json)
#          echo "Version: $VERSION"
#          echo "APP_VERSION=$VERSION" >> $GITHUB_ENV
#
#      - name: Set up Node
#        uses: actions/setup-node@v3
#        with:
#          node-version: 18
#
#
#      - name: Install dependencies and run tests
#        run: |
#          npm ci
#          npm run lint
#
#      - name: Log in to Docker Hub
#        uses: docker/login-action@v2
#        with:
#          username: ${{ secrets.DOCKER_USERNAME }}
#          password: ${{ secrets.DOCKER_PASSWORD }}
#
#      - name: Build and push
#        uses: docker/build-push-action@v4
#        with:
#          context: .
#          push: true
#          tags: vladpustovit/github-actions-test:${{ env.APP_VERSION }}